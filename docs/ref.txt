for standard install on W1209

make BOARD=W1209 flash
mkdir -p out/W1209
sdasstm8 -I. -I./W1209 -plosgffw out/W1209/forth.rel forth.asm
sdcc -mstm8 -oout/W1209/W1209.ihx main.c out/W1209/forth.rel
stm8flash -c stlinkv2 -p `[ -f W1209/target.inc ] && awk '/TARGET/ {print tolower($3)}' W1209/target.inc || echo "stm8s103f3"` -w out/W1209/W1209.ihx
Determine FLASH area
Writing Intel hex file 5397 bytes at 0x8000... OK
Bytes written: 5397

\ BAREBONES        = 1    ; Remove or unlink some more: HERE
\  Removes: 'EMIT '?KEY EXG @EXECUTE NUF?  
\    SPACES .R U.R U. . ? .( ( [COMPILE] 
\    FOR NEXT DO LOOP +LOOP BEGIN UNTIL AGAIN IF THEN ELSE 
\    AHEAD WHILE REPEAT AFT ." _TYPE dm+ DUMP .S .ID >NAME 
\    SEE WORDS ABORT" >CHAR 2* 2/ MIN MAX < = UM+
\    2@ 2! (+loop) LEAVE OR EXIT
\  Keeps headers: FILE : C, , [ ] ; COLD
\  Makes headerless: everything else
\  drops support for entry of binary (%) and decimal (&)

\ for ERASE, E7S references ERASE:
\  so reduced scope of BAREBONES to just ERASE header

>>best effort with headers in NVM
make BOARD=W1209 flash
mkdir -p out/W1209
sdasstm8 -I. -I./W1209 -plosgffw out/W1209/forth.rel forth.asm
sdcc -mstm8 -oout/W1209/W1209.ihx main.c out/W1209/forth.rel
stm8flash -c stlinkv2 -p `[ -f W1209/target.inc ] && awk '/TARGET/ {print tolower($3)}' W1209/target.inc || echo "stm8s103f3"` -w out/W1209/W1209.ihx
Determine FLASH area
Writing Intel hex file 3867 bytes at 0x8000... OK
Bytes written: 3867


hex $6e @ <# #S #> space type
 8F1B ok
 
>>removed most headers
make BOARD=W1209 flash
mkdir -p out/W1209
sdasstm8 -I. -I./W1209 -plosgffw out/W1209/forth.rel forth.asm
sdcc -mstm8 -oout/W1209/W1209.ihx main.c out/W1209/forth.rel
stm8flash -c stlinkv2 -p `[ -f W1209/target.inc ] && awk '/TARGET/ {print tolower($3)}' W1209/target.inc || echo "stm8s103f3"` -w out/W1209/W1209.ihx
Determine FLASH area
Writing Intel hex file 3315 bytes at 0x8000... OK
Bytes written: 3315

hex $6e @ <# #S #> space type
 8CF3
 

